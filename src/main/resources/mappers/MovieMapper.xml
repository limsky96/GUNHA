<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
    "-//mybatis.org//DTD Config 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="teamproject.gunha.mapper.MovieMapper">
<select id="findMovieList" resultMap="movieMap">
  select * from NETFLIX_MOVIE
</select>
<resultMap id="movieMap" type="teamproject.gunha.vo.MovieVO">
  <result property="movieId" column="movie_id" />
  <result property="movieName" column="movie_name" />
  <result property="moviepostUrl" column="movie_postUrl" />
  <result property="movietrailerUrl" column="movie_trailerUrl" />
  <result property="movieContent" column="movie_content" />
  <result property="movieGenre" column="movie_genre" />
  <result property="movieCast" column="movie_cast" />
  <result property="movieReleaseDate" column="movie_release_date" />
  <result property="movieFavorite" column="movie_favorite" />
  <result property="autoplay" column="autoplay" />
</resultMap>

<!-- <resultMap id="userMap" type="edu.global.demo.vo.UserVO">
  <constructor>
    <idArg column="member_id" javaType="java.lang.String" />
    <arg column="member_email" javaType="java.lang.String" />
    <arg column="member_password" javaType="java.lang.String" />
    <arg column="member_card_number" javaType="java.lang.String" />
    <arg column="member_membership_no" javaType="int" />
    <arg column="member_social" javaType="java.lang.String" />
  </constructor>
  <collection property="authList" resultMap="authMap"></collection>
</resultMap> -->



<resultMap id="authMap" type="teamproject.gunha.vo.AuthVO">
 <result property="userId" column="auth_member_id"/>
 <result property="authority" column="auth_member_authority"/>
</resultMap>

<resultMap id="profileMap" type="teamproject.gunha.vo.ProfileVO">
  <result property="userId" column="member_profile_member_id"/>
  <result property="profileName" column="member_profile_name"/>
</resultMap>



<!--  관리자 영화  관리 -->

    <!-- 전체 영화 목록 조회 -->
    <select id="findAllMovies" resultMap="movieMap">
        SELECT * FROM NETFLIX_MOVIE
    </select>

    <!-- 영화 정보 조회 by ID -->
    <select id="findMovieById" resultMap="movieMap">
        SELECT * FROM NETFLIX_MOVIE WHERE movie_id = #{movieId}
    </select>

    <!-- 새로운 영화 추가 -->
    <insert id="insertMovie" parameterType="teamproject.gunha.vo.MovieVO">
        INSERT INTO NETFLIX_MOVIE (movie_id, movie_name, movie_postUrl, movie_trailerUrl, movie_content, movie_genre, movie_cast, movie_release_date, movie_favorite, autoplay)
        VALUES (#{movieId}, #{movieName}, #{moviepostUrl}, #{movietrailerUrl}, #{movieContent}, #{movieGenre}, #{movieCast}, #{movieReleaseDate}, #{movieFavorite}, #{autoplay})
    </insert>

    <!-- 영화 정보 업데이트 -->
    <update id="updateMovie" parameterType="teamproject.gunha.vo.MovieVO">
        UPDATE NETFLIX_MOVIE
        SET
        movie_name = #{movieName},
        movie_postUrl = #{moviepostUrl},
        movie_trailerUrl = #{movietrailerUrl},
        movie_content = #{movieContent},
        movie_genre = #{movieGenre},
        movie_cast = #{movieCast},
        movie_release_date = #{movieReleaseDate},
        movie_favorite = #{movieFavorite},
        autoplay = #{autoplay}
        WHERE movie_id = #{movieId}
    </update>

    <!-- 영화 정보 삭제 by ID -->
    <delete id="deleteMovieById">
        DELETE FROM NETFLIX_MOVIE WHERE movie_id = #{movieId}
    </delete>

</mapper>