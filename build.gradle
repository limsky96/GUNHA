plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.14'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'teamproject'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-tomcat'
  // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'
  // https://mvnrepository.com/artifact/org.springframework.security/spring-security-taglibs
  implementation 'org.springframework.security:spring-security-taglibs'

  // https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc10 
  implementation 'com.oracle.database.jdbc:ojdbc10:19.17.0.0'
  // https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
  implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
	// implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  // 혹시 모르니 thymeleaf도
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  // implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
  //mustache
  // Database Connection Pool (HikariCP)
  implementation 'com.zaxxer:HikariCP:4.0.3' // 예시로 HikariCP를 사용하겠습니다
  // implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// runtimeOnly 'com.h2database:h2'
	// runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	// oauth2-client 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

  // https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-jasper
  // implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
  // https://mvnrepository.com/artifact/javax.servlet/jstl
  // implementation 'javax.servlet:jstl'
  // // https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc8
  // implementation 'com.oracle.database.jdbc:ojdbc8:23.2.0.0'

  // //google
  // implementation 'org.springframework.boot:spring-boot-starter-test'
  // implementation'org.springframework.boot:spring-boot-starter-actuator'
  // implementation'org.springframework.boot:spring-boot-starter-data-jpa'
  // implementation'org.springframework.boot:spring-boot-starter-data-rest'
  // implementation'org.springframework.boot:spring-boot-starter-validation'
  // implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.3'
  // implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
  // implementation group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4', version: '1.16'
  
  // testAnnotationProcessor('org.projectlombok:lombok')
  testCompileOnly 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
  testImplementation 'org.junit.jupiter:junit-jupiter-api'
  testAnnotationProcessor 'org.projectlombok:lombok'
  // https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter-test
  testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.0'
  // json parsing
  // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
  implementation 'com.googlecode.json-simple:json-simple:1.1.1'
  // https://mvnrepository.com/artifact/com.google.code.gson/gson
  implementation 'com.google.code.gson:gson'
}

tasks.named('test') {
	useJUnitPlatform()
}
